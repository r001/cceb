
# Token to access cceb through telegram
# Setup: in telegram sent the following messages to BotFather user:
# /start
# /newbot
# /<botname>
# /<arbitrary_username_ending_with_bot>
# In the reply you will get  "Use this token to access the HTTP API: 
# Paste this to telegram-token blow!
# start telegram access call 'bin/index.js'
# In telegram write message to <botname>
# eg: /ls
# This will list the contents of the dir. 
# You have full bash access from telegram.
# And thus a huge security hole!!!! Beware!
telegram-token: '000000000:AAAAaAaA_aAA000AA0aaA0AAaAaaaAaa0AA' # add your telegram api-key here

keys:
  #name of exchange can be any that is supported by ccxt
  kraken:
    #exchanges' type should be centralized, except for uniswap or any on-the-chain exchange 
    type: 'centralized'
    apiKey: ''
    secret: ''
    timeout: 30000
    enableRateLimit: true
  coinbasepro:
    type: 'centralized'
    apiKey: ''
    secret: ''
    timeout: 30000
    enableRateLimit: true
    password: ''
  binance:
    type: 'centralized'
    apiKey: ''
    secret: ''
    timeout: 30000
    enableRateLimit: true
  coinbase:
    type: 'centralized'
    apiKey: ''
    secret: ''
    timeout: 30000
    enableRateLimit: true
  bitmax:
    type: 'centralized'
    apiKey: ''
    secret: ''
    timeout: 30000
    enableRateLimit: true
  bkex:
    type: 'centralized'
    apiKey: ''
    secret: ''
    timeout: 30000
    enableRateLimit: true
  okex:
    type: 'centralized'
    apiKey: ''
    secret: ''
    password: '' #Okex does require a password along with api key
    timeout: 30000
    enableRateLimit: true
# <your_exchange:>
#    type: 'centralized'
#    apiKey: ''
#    secret: ''
#    password: ''
#    timeout: 30000
#    enableRateLimit: true
#
# You can use cceb to withdraw tokens or fiat from exchanges. You have to config the following way:
withdraw:
  kraken:                        # name of exchange
    EUR:                         # token to withdraw
      BANKNAME:                  # destination name you will use with cceb
        destination: 'BANKNAME'  # destination name on exchange
        params:             
          key: 'BANKNAME-EUR'    # kraken requires this parameter as well
    ETH:
      MY-ACC-NAME:
        destination: '0x0000000000000000000000000000000000000000'
        params:
          key: 'my-acc'
  binance:
    ENG:
      ACC1:
        destination: '0x0000000000000000000000000000000000000000'
        params:
          key: '0x000000000000000000' # binance does require a key
    ETH:
      ACC1:
        destination: '0x0000000000000000000000000000000000000000'
        params:
          key: 'AAAA'
    USDT:
      ACC1:
        destination: '0x0000000000000000000000000000000000000000'
        params:
          key: 'AAAA'
  coinbasepro:
    EUR:
      BANKNAME:
        destination: 'Bankname'
        params:
          payment_method_id: '00a000aa-000a-00aa-0a00-00a00000a00a'
  okex:
    ETH:
      ACCOUNTNAME:
        destination: 'Accountname'
        params:
          fee: 0.1  #Okex asks you to define fee on Ethereum
          trade_pwd: 'password'
    USDT:
      ACCOUNTNAME:
        destination: 'Accountname'
        params:
          fee: 0.1
          trade_pwd: 'password'
web3:
  etherscan: 
    # Needed for auto-downloading abi for smart contracts. 
    # You do not need to have api-key if you already have 
    # an entry for contract in './abi/' folder.
    api-key: ''
  ethgasstation: 
    # api-key required for auto gas estimation.
    # If you provide --gaslimit every time, then you 
    # do not need to fill in api-key below.
    api-key: ''
  account: 
    # ETH-1 is the default account. You can set different default 
    # account name in 'config/default.yaml -> web3.defaultFrom'
    # Storing private key next to address is UNSAFE!!! Use it at your own risk!!!!
    # You can use bin/encrypt and bin/decrypt to encrypt and decrypt this whole file to be safer
    ETH-1:
      address: '0x2222222222222222222222222222222222222222'
      type: 'privatekey'
      privatekey: '' # add your private key here
    # List all your accounts below. 
    # Account names are SHOULD follow the pattern ETH-<name>. 
    # They will be substituted with address defined here.
    #
    # Account of type: 'airsign' (https://github.com/r001/airsign)
    # QR codes are used to transmit tx to signer, and back the signature.
    ETH-2:
      address: '0x0000000000000000000000000000000000000000'
      type: 'airsign'  # QR code with tx data will be generated
      privatekey: 'na' # no private key sould be added for airsign accounts
    # When a tx is signed with ledger account type, ledger will be asked to sign transaction.
    # You can list your ledger addresses with `cceb ledger addresses`
    # Use 'live' addresses wherewer possible!
    ETH-3:
      address: '0x1111111111111111111111111111111111111111'
      type: 'ledger'
      # (optional) you can get the derive path with `cceb ledger addresses`
      # If you provide derivePath: the signing of transactions will be faster as ledger does not have to search for your address first. 
      # DO NOT CREATE derivePath: entry, if you don't want to specify!!!
      # derivePath: "44'/60'/0'/0" 
      privatekey: 'na' # no private key must be added to ledger accounts
  mainnet:
    infura: 
      # To access ethereum you do need a provider, that is usually
      # infura. Get an api-key for free at https://infura.io
      api-key: ''
    deposit:
      # Addresses listed here can be used as deposit accounts. Later versions of cceb will 
      # implement deposit address checks.
      # Deposit addresses must be in the form <upper_case_exchange_name>_<upper_case_token_name>
      # now you can issue:
      # cceb eth tx ETH transfer BINANCE_ETH 1.000000000000000000 --from ETH-1
      # If destination address is a deposit address, 
      # cceb will check if it can receive the token transferred. 
      # This is to avoid to send token to the wrong deposit address.
      BINANCE_ETH:
        address: '0x0000000000000000000000000000000000000000'
      BINANCE_USDT:
        address: '0x0000000000000000000000000000000000000000'
      BINANCE_CRV:
        address: '0x0000000000000000000000000000000000000000'
      BINANCE_ENG:
        address: '0x0000000000000000000000000000000000000000'
      COINBASEPRO_ETH:
        address: '0x0000000000000000000000000000000000000000'
      COINBASEPRO_DAI:
        address: '0x0000000000000000000000000000000000000000'
      COINBASEPRO_BTC:
        address: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
      COINBASEPRO_MKR:
        address: '0x0000000000000000000000000000000000000000'
      COINBASEPRO_USDC:
        address: '0x0000000000000000000000000000000000000000'
      KRAKEN_ETH:
        address: '0x0000000000000000000000000000000000000000'
  rinkeby:
    infura:
      api-key: ''
  kovan:
    infura: 
      api-key: ''
  ropsten:
    infura:
      api-key: ''
